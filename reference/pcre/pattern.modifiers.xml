<?xml version="1.0" encoding="UTF-8"?>
<!-- EN-Revision: n/a Maintainer: darvina Status: ready -->
<!-- splitted from ./it/functions/pcre.xml, last change in rev 1.1 -->
<article xml:id="reference.pcre.pattern.modifiers" xmlns="http://docbook.org/ns/docbook">
 <title>Modificatori di criterio (Pattern Modifiers)</title>
 <titleabbrev>Questo capitolo descrive i possibili modificatori applicabili ad una espressione regolare</titleabbrev>
  <para>
   Di seguito saranno elencati i valori attualmente previsti. I nomi
   posti tra parentesi si riferiscono ai corrispettivi nomi usati
   internamente da PCRE.
  </para>
  <para>
   <blockquote>
    <variablelist>
     <varlistentry>
      <term><emphasis>i</emphasis> (<literal>PCRE_CASELESS</literal>)</term>
      <listitem>
       <simpara>
        Se si attiva questo modificatore, l'espressione regolare viene
        riconosciuta senza distinguere tra le lettere maiuscole e minuscole.
       </simpara>
      </listitem>
     </varlistentry>
     <varlistentry>
      <term><emphasis>m</emphasis> (<literal>PCRE_MULTILINE</literal>)</term>
      <listitem>
       <simpara>
        Per default, PCRE tratta il testo su cui fare la ricerca come
        una "singola linea" di caratteri (anche se in realtà può
        contenere diversi "a capo" (newline)). Il carattere di "inizio riga"
        (^) indica solamente l'inizio del testo passato. Analogamente il
        carattere di "fine riga" ($) indica la fine del testo o prima
        se vi sono dei caratteri di "a capo" (a meno che
        non sia attivato il modificatore <emphasis>D</emphasis>).
        In questo modo si comporta anche Perl.
       </simpara>
       <simpara>
        Invece quando viene indicato questo modificatore, "inizio riga"
        e "fine riga" vengono identificati in base ai caratteri di "a capo"
        presenti nel testo (rispettivamente subito dopo e subito prima di
        questo carattere). Questo comportamento è equivalente
        al modificatore /m di Perl. Se nel testo passato non vi sono
        caratteri di "a capo" o non vi sono occorrenze dei caratteri
        ^ o $ nell'espressione regolare, l'uso di questo modificatore non ha effetto.
       </simpara>
      </listitem>
     </varlistentry>
     <varlistentry>
      <term><emphasis>s</emphasis> (<literal>PCRE_DOTALL</literal>)</term>
      <listitem>
       <simpara>
        Se si attiva questo modificatore, il carattere . usato
        nell'espressione regolare indica tutti i possibili caratteri compreso il carattere di "a capo" (newline). Senza questo
        modificatore il carattere "a capo" viene escluso.
        Questo modificare è equivalente a /s di Perl. Una espressione
        regolare contenente una forma negativa, come [^a], riconosce
        sempre un "a capo" a prescindere da questo modificatore.
       </simpara>
      </listitem>
     </varlistentry>
     <varlistentry>
      <term><emphasis>x</emphasis> (<literal>PCRE_EXTENDED</literal>)</term>
      <listitem>
       <simpara>
        Se si attiva questo modificatore, verranno ignorati gli spazi
        presenti nell'espressione regolare, tranne quelli preceduti dal
        carattere di escape (\) o posti all'interno di una classe
        di caratteri. Saranno, inoltre, ignorati i caratteri posti
        tra il simbolo # (se non è preceduto dall'escape, ed è posto al
        di fuori di una classe di caratteri) ed il successivo carattere
        di "a capo" (newline). Questo comportamento equivale al flag /x
        di Perl e consente di inserire dei commenti all'interno di
        espressioni regolari complesse. Gli spazi bianchi non devono
        mai comparire all'interno di sequenze speciali di caratteri,
        come, ad esempio, la sequenza (?( che introduce ad un criterio condizionale.
       </simpara>
      </listitem>
     </varlistentry>
     <varlistentry>
      <term><emphasis>A</emphasis> (<literal>PCRE_ANCHORED</literal>)</term>
      <listitem>
       <simpara>
        Se viene specificato questo modificatore, la funzione <function>preg_replace</function>
        attua la sostituzione dei riferimenti all'indietro nella
        stringa di sostituzione, la interpreta come codice PHP, quindi utilizza il risultato
        come testo da sostituire alle stringhe cercate.
        Gli apici singoli e doppi  backslash (<literal>\</literal>) e i caratteri NULL sono
        preceduti dal backslash nei riferimenti sostituiti.
       </simpara>
      </listitem>
     </varlistentry>
     <varlistentry>
      <term><emphasis>D</emphasis> (<literal>PCRE_DOLLAR_ENDONLY</literal>)</term>
      <listitem>
       <simpara>
        If this modifier is set, a dollar metacharacter in the pattern
        matches only at the end of the subject string. Without this
        modifier, a dollar also matches immediately before the final
        character if it is a newline (but not before any other
        newlines).  This modifier is ignored if <emphasis>m</emphasis>
        modifier is set. There is no equivalent to this modifier in
        Perl.
       </simpara>
      </listitem>
     </varlistentry>
     <varlistentry>
      <term><emphasis>S</emphasis></term>
      <listitem>
       <simpara>
        When a pattern is going to be used several times, it is
        worth spending more time analyzing it in order to speed up
        the time taken for matching. If this modifier is set, then
        this extra analysis is performed. At present, studying a
        pattern is useful only for non-anchored patterns that do not
        have a single fixed starting character.
        As of PHP 7.3.0 this flag has no effect.
       </simpara>
      </listitem>
     </varlistentry>
     <varlistentry>
      <term><emphasis>U</emphasis> (<literal>PCRE_UNGREEDY</literal>)</term>
      <listitem>
       <simpara>
        This modifier inverts the "greediness" of the quantifiers so
        that they are not greedy by default, but become greedy if
        followed by <literal>?</literal>. It is not compatible with Perl. It can also
        be set by a <literal>(?U)</literal>
        <link linkend="regexp.reference.internal-options">modifier setting within
        the pattern</link> or by a question mark behind a quantifier (e.g.
        <literal>.*?</literal>).
       </simpara>
       <note>
        <para>
         It is usually not possible to match more than <link
         linkend="ini.pcre.backtrack-limit">pcre.backtrack_limit</link>
         characters in ungreedy mode.
        </para>
       </note>
      </listitem>
       </varlistentry>
     <varlistentry>
      <term><emphasis>X</emphasis> (<literal>PCRE_EXTRA</literal>)</term>
      <listitem>
       <simpara>
        This modifier turns on additional functionality of PCRE that
        is incompatible with Perl. Any backslash in a pattern that
        is followed by a letter that has no special meaning causes
        an error, thus reserving these combinations for future
        expansion. By default, as in Perl, a backslash followed by a
        letter with no special meaning is treated as a literal.
        There are at present no other features controlled by this
        modifier.
       </simpara>
      </listitem>
     </varlistentry>
     <varlistentry>
      <term><emphasis>J</emphasis> (<literal>PCRE_INFO_JCHANGED</literal>)</term>
      <listitem>
       <simpara>
        The (?J) internal option setting changes the local <literal>PCRE_DUPNAMES</literal>
        option. Allow duplicate names for subpatterns.
        As of PHP 7.2.0 <literal>J</literal> is supported as modifier as well.
       </simpara>
      </listitem>
     </varlistentry>
     <varlistentry>
      <term><emphasis>u</emphasis> (<literal>PCRE_UTF8</literal>)</term>
      <listitem>
       <simpara>
        This modifier turns on additional functionality of PCRE that
        is incompatible with Perl. Pattern and subject strings are
        treated as UTF-8. An invalid subject will cause the preg_* function to
        match nothing; an invalid pattern will trigger an error of
        level E_WARNING. Five and six octet UTF-8 sequences are
        regarded as invalid.
       </simpara>
      </listitem>
     </varlistentry>
     <varlistentry>
      <term><emphasis>n</emphasis> (<literal>PCRE_NO_AUTO_CAPTURE</literal>)</term>
      <listitem>
       <simpara>
        This modifier makes simple <code>(xyz)</code> groups non-capturing.
        Only named groups like <code>(?&lt;name&gt;xyz)</code> are capturing.
        This only affects which groups are capturing, it is still possible to
        use numbered subpattern references, and the matches array will still
        contain numbered results. Available as of PHP 8.2.0.
       </simpara>
      </listitem>
     </varlistentry>
     <varlistentry>
      <term><emphasis>r</emphasis> (<literal>PCRE2_EXTRA_CASELESS_RESTRICT</literal>)</term>
      <listitem>
       <simpara>
        When <emphasis>u</emphasis> (<literal>PCRE_UTF8</literal>) and <emphasis>i</emphasis> (<literal>PCRE_CASELESS</literal>)
        are in effect, this modifier prevents matching across ASCII and non-ASCII characters.
       </simpara>
       <simpara>
        For example, <code>preg_match('/\x{212A}/iu', "K")</code> matches the Kelvin sign <literal>K</literal> (U+212A).
        When <emphasis>r</emphasis> is used (<code>preg_match('/\x{212A}/iur', "K")</code>), it does not match.
       </simpara>
       <simpara>
        Available as of PHP 8.4.0.
       </simpara>
      </listitem>
     </varlistentry>
    </variablelist>
   </blockquote>
  </para>
</article>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
